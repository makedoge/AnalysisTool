<Window x:Class="FringeAnalysis.Controls.AttachableWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Height="{Binding Path=Child.Height, Mode=TwoWay, FallbackValue=300}" 
    Width="{Binding Path=Child.Width, Mode=TwoWay, FallbackValue=300}" 
    WindowStyle="None" AllowsTransparency="True"
    xmlns:controls="clr-namespace:FringeAnalysis.Controls" x:Name="MyWindow" >
  <Window.Resources>
    <controls:SolidBrushToColorConverter x:Key="SolidBrushToColorConverter" />
    <SolidColorBrush x:Key="UnSelectedBorderColor" Color="#FF3F3F3F" />
    <Style TargetType="{x:Type Button}" >
      <Setter Property="Width" Value="22" />
      <Setter Property="Height" Value="22" />
      <Setter Property="Foreground" Value="White" />
      <Setter Property="Template" >
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="ButtonBackground" 
                    BorderBrush="#FFF1F1F1"
                    BorderThickness="1"
                    CornerRadius="1,1,1,1" 
                    Margin="1,1,1,1">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                  <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=150}" Offset="0.1" />
                  <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}}" Offset="0.6" />
                </LinearGradientBrush>
              </Border.Background>
              <Grid>
                <AdornerDecorator>
                  <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                </AdornerDecorator>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsMouseOver" Value="False" />
                  <Condition Property="controls:AttachableWindow.IsElementActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="ButtonBackground" Value="DarkGray" />
                <Setter Property="Background" TargetName="ButtonBackground" >
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=75}" Offset="0.1" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}}" Offset="0.6" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="ButtonBackground">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028" >
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=225}" Offset="0.1" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}}" Offset="0.6" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  <Window.Style>
    <Style TargetType="{x:Type Window}" >
      <Setter Property="BorderBrush" Value="{Binding Path=Child.BorderBrush}" />
      <Setter Property="Background" Value="{Binding Path=Child.Background}" />
      <Setter Property="Template" >
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}" >
            <AdornerDecorator>
              <Border x:Name="BorderWindow"          
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="3,1,3,3" 
                    CornerRadius="2,2,2,2" >
                <DockPanel x:Name="DockPanelWindow" >
                  <DockPanel x:Name="DockPanelTitleBar" DockPanel.Dock="Top"
                             Background="{TemplateBinding BorderBrush}" MinHeight="{Binding Path=Child.MinSize.Height}" >
                    <StackPanel x:Name="PanelButtons" Orientation="Horizontal" 
                                DockPanel.Dock="Right" HorizontalAlignment="Right" >
                      <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                        <Button x:Name="attachButton" Background="{TemplateBinding BorderBrush}" Command="controls:AttachableWindow.AttachWindow"  
                                controls:AttachableWindow.IsElementActive="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" >
                          <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" >
                              <Setter Property="Visibility" Value="Visible" />
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Child}" Value="{x:Null}" >
                                  <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Button.Style>
                          <Path Width="10" Height="14" Data="M0,10 L 2,10 2,2 7,2 8,2 8,10 7,10 7,3 8,3 8,10 10,10 2,10 5,10 5,14" StrokeThickness="1.4" Stroke="White" >
                            <Path.RenderTransform>
                              <RotateTransform Angle="90" CenterX="5" CenterY="7" />
                            </Path.RenderTransform>
                          </Path>
                        </Button>
                        <Button x:Name="minButton" Background="{TemplateBinding BorderBrush}" Command="controls:AttachableWindow.MinimizeWindow"
                                controls:AttachableWindow.IsElementActive="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" >
                          <Path Data="M-4,12 L2,12 2,11 -4,11" StrokeThickness="2.0" Fill="White" Stroke="White" />
                        </Button>
                        <Button x:Name="maxButton" Background="{TemplateBinding BorderBrush}"
                                controls:AttachableWindow.IsElementActive="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"  >
                          <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" >
                              <Setter Property="Command" Value="controls:AttachableWindow.MaximizeWindow" />
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized" >
                                  <Setter Property="Command" Value="controls:AttachableWindow.NormalizeWindow" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Button.Style>
                          <Path StrokeThickness="1.0" Stroke="White" >
                            <Path.Style>
                              <Style TargetType="Path" >
                                <Setter Property="Data" Value="M0,2 L10,2 10,3 0,3 0,4 10,4 10,12 0,12 0,2" />
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized" >
                                    <Setter Property="Data" Value="M0,5 L7,5 7,6 0,6 0,7 7,7 7,12 0,12 0,5 2,5 2,1 9,1 9,2 2,2 2,3 9,3 9,8 7,8" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </Path.Style>
                          </Path>
                        </Button>
                        <Button x:Name="closeButton" Background="Red" Command="ApplicationCommands.Close"
                                controls:AttachableWindow.IsElementActive="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" >
                          <Path Data="M1,1 L11,11 M11,1 L1,11" StrokeThickness="2.0" Stroke="White" />
                        </Button>
                      </StackPanel>
                    </StackPanel>
                    <Grid x:Name="PanelTitle" Background="Transparent" 
                          PreviewMouseLeftButtonDown="DragWindow" DockPanel.Dock="Left" >
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                    <!--StackPanel x:Name="PanelTitle" Orientation="Horizontal" Background="Transparent" 
                                PreviewMouseLeftButtonDown="DragWindow" DockPanel.Dock="Left" -->
                      <Image x:Name="ImageIcon" Source="{TemplateBinding Icon}" Grid.Column="0" 
                             Width="16" Height="16" Stretch="Uniform" Margin="1,0,1,0" />
                      <TextBlock x:Name="TextBlockTitle" Text="{Binding Path=Child.Title}" Grid.Column="1" 
                                 TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                 Foreground="White" VerticalAlignment="Center" />
                    <!--/StackPanel-->
                    </Grid>
                  </DockPanel>
                  <ContentPresenter Content="{Binding Child.Content}" DockPanel.Dock="Top" />
                </DockPanel>
              </Border>
            </AdornerDecorator>
            <ControlTemplate.Triggers>
              <Trigger Property="IsActive" Value="False" >
                <Setter Property="BorderBrush" TargetName="BorderWindow" >
                  <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=75}" Offset="0" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="DockPanelTitleBar" >
                  <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=60}" Offset="0" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=130}" Offset="0.01" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=60}" Offset="0.1" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=60}" Offset="0.4" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=105}" Offset="0.9" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=60}" Offset="1.0" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>                
              </Trigger>
              <Trigger Property="IsActive" Value="True" >
                <Setter Property="Background" TargetName="DockPanelTitleBar" >
                  <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}}" Offset="0" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=100}" Offset="0.01" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}}" Offset="0.1" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}}" Offset="0.4" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}, ConverterParameter=75}" Offset="0.9" />
                      <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidBrushToColorConverter}}" Offset="1.0" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>                
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>          
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Style>
</Window>
